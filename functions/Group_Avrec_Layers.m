function Group_Avrec_Layers(homedir,Group)

% This script takes *.mat files out of the Figures\Group_Avrec folder which is
% generated by the ChangeInAvrec.m script. MAKE SURE you run the Change in
% Avrec script on the current group.m and _DATA.mat so that things match
% up. This script is dynamic in group size but will need tweaking if a
% group is added.

%Input:     ..\Figures\Group_Avrec -> *AvrecAll.mat
%Output:    ..\Figures\Group_Avrec -> figures of full and layer-wise Avrecs
%           pre laser and post laser, including standard deviation

% Normalization of the layer to the highest peak of the average trace of 
%   measurements can be toggled (yesnorm)

%% standard operations
dbstop if error

% Change directory to your working folder
if ~exist('homedir','var')
    if exist('E:\csd_interspecies','dir') == 7
        cd('E:\csd_interspecies');
    end
    homedir = pwd;
    addpath(genpath(homedir));
end

% set some species specific paths and data:
if contains(Group,'CIC')
    datfolder   = 'mouse_output';
    grouptype   = 'Mouse';
    freqlist    = {'2Hz' '5Hz' '10Hz' '20Hz' '40Hz'};
    figfolder   = 'mouse_figures';
    BL          = 200;
elseif contains(Group,'FAFAC')
    datfolder   = 'bat_output';
    grouptype   = 'Bat';
    freqlist    = {'2Hz' '5.28Hz' '8.57Hz' '22.63Hz' '36.76Hz'};
    figfolder   = 'bat_figures';
    BL          = 510;
else
    error('If this is a new group, please work it through the pipeline')
end
cd(homedir),cd(datfolder);
layers = {'All', 'II', 'IV', 'V', 'VI'};


%% Choose Type

yesnorm = 1;            % 1 = normalize to highest Pre peak; 0 = don't

cd (homedir),cd(figfolder),cd Group_Avrec

load([grouptype '_AvrecAll.mat'],'AvrecAll','PeakofAvg')
% avrecall  = stimulus x layer x animal {measurement x time}
% peakofavg = animal {measurement x time}

%% To Norm or not to Norm

% normalize to all stim of a layerwise or full column call to the highest
% peak of any stimulus (i.e. 2 Hz) of the layer of that animal
Subject = 0;
if yesnorm == 1
    for iAn = 1:length(PeakofAvg)
        if isempty(PeakofAvg{iAn}) % skip empty ones
            continue
        end
        Subject = Subject + 1; % yes this isn't great, sorry
        for iStim = 1:size(AvrecAll,1)
            for iLay = 1:size(AvrecAll,2)
                % normalize each animal's measuremnt to their 2Hz peak
                % of activity of the Avrec. 
                toNormto = PeakofAvg{iAn};
                Avrec{iStim,iLay,Subject} = AvrecAll{iStim,iLay,iAn} ./ toNormto;
            end
        end
    end
end
clear AvrecAll

%% generate figures

% Note on how groups are currently structure:
%       KICgroup{stimulus(i.e. 2 Hz),layer(i.e. IV),animal(i.e.KIC02)}...
%       ,time(ms))

for iLay = 1:length(layers)

    figure('Name',[grouptype '_Traces_' layers{iLay}], 'Position',[5 45 900 800]); 
    sgtitle([grouptype ' traces for ' layers{iLay} ' channels'])
    hold on
    for iStim = 1:length(freqlist)
        subplot(length(freqlist),1,iStim);
        title(num2str(freqlist{iStim}))

        stackgroup = vertcat(Avrec{iStim,iLay,:});
        
        shadedErrorBar(1:size(stackgroup,2),nanmean(stackgroup),nanstd(stackgroup),'lineProps', '-b')
    end

    h = gcf;
    savefig(h,[grouptype '_Traces_' layers{iLay}],'compact')
    close (h)
end

%% Normalized Avrec peak detection
% Normalization is happening on the trace before peak detection. The trace
% is normalized to the maximum point of the average trace for each
% frequency / layer / subject. That would take an average of 13 traces for
% the CIC group for example, find the max of the signal, and divid all 13
% by that maximum
PeakData = array2table(zeros(0,9));
if yesnorm == 0
    warning('this is NOT normalized data so it will output the same peak detection as the previous script')
end
% Avrec { stimulus frequency , layer , subject }
run([Group '.m']) % run group for animal names
% loop through the avrec and layer traces
for iLay = 1:length(layers)
    % loop through stimulus frequencies
    for iStim = 1:length(freqlist)
        for iAn = 1:size(Avrec,3)
            
            thisMeas = Avrec{iStim,iLay,iAn};
            % pull out consecutive peak data
            [peakout,latencyout,rmsout] = consec_peaks(thisMeas, ...
                str2double(freqlist{iStim}(1:end-2)), BL);

            for iMeas = 1:size(peakout,1)
                for itab = 1:size(peakout,2)
                    CurPeakData = table({animals{iAn}(1:end-2)}, animals(iAn), {layers{iLay}}, ...
                        {iMeas}, freqlist(iStim), {itab}, peakout(iMeas,itab), ...
                        latencyout(iMeas,itab),rmsout(iMeas,itab) );

                    PeakData = [PeakData; CurPeakData];
                end
            end % measurement
            % got it for this Avrec entry here
        end % subject
    end % stimulus frequency
end % layer
PeakData.Properties.VariableNames = {'Group','Animal','Layer','Measurement',...
    'ClickFreq','OrderofClick','PeakAmp','PeakLat','RMS'};

cd(homedir); cd(datfolder)
writetable(PeakData,'normAVRECPeak.csv')
cd(homedir)


